@{
   
    var todayDate = DateTime.Today.ToString("yyyy-MM-dd"); // Format today's date
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Package</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .package-details {
            margin-top: 20px;
        }

        .details-group {
            margin-top: 15px;
        }

        .luxury-toggle-group {
            margin-top: 15px;
        }

        .text-danger {
            color: #dc3545;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h2>Edit Package</h2>
        <form id="searchForm">
            <div class="mb-3">
                <label for="packageId" class="form-label">Enter Package ID to Edit</label>
                <input type="text" class="form-control" id="packageId" placeholder="Package ID">
            </div>
            <button type="submit" class="btn btn-primary">Search</button>
        </form>

        <form id="editForm" style="display:none;" method="post">
            <div class="form-group">
                <label for="TotalCount">Total Count</label>
                <input type="number" class="form-control" id="TotalCount" name="TotalCount" />
                <span id="TotalCountError" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="PackagePrice">Package Price</label>
                <input type="number" step="0.01" class="form-control" id="PackagePrice" name="PackagePrice" />
                <span id="PackagePriceError" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="Dated">Package Date</label>
                <input type="date" class="form-control" id="Dated" name="Dated" required value="@todayDate" />
            </div>

            <div class="form-group luxury-toggle-group">
                <button type="button" class="btn btn-warning luxury-toggle-btn" id="luxuryToggle">Enable Luxury</button>
                <input type="hidden" id="Luxuary" name="Luxuary" value="false" />
            </div>

            <div class="form-group toggle-group">
                <input type="checkbox" id="toggleFlightDetails" />
                <label for="toggleFlightDetails">Include Flight Details</label>
            </div>

            <div id="flightDetails" class="details-group" style="display:none;">
                <div class="form-group">
                    <label for="FlightName">Flight Name</label>
                    <input type="text" class="form-control" id="FlightName" name="FlightName" />
                </div>

                <div class="form-group">
                    <label for="From">From</label>
                    <input type="text" class="form-control" id="From" name="From" />
                </div>

                <div class="form-group">
                    <label for="To">To</label>
                    <input type="text" class="form-control" id="To" name="To" />
                </div>

                <div class="form-group">
                    <label for="FlightType">Flight Type</label>
                    <input type="text" class="form-control" id="FlightType" name="FlightType" />
                </div>
            </div>

            <div class="form-group toggle-group">
                <input type="checkbox" id="toggleAccDetails" />
                <label for="toggleAccDetails">Include Accommodation Details</label>
            </div>

            <div id="accDetails" class="details-group" style="display:none;">
                <div class="form-group">
                    <label for="AccName">Accommodation Name</label>
                    <input type="text" class="form-control" id="AccName" name="AccName" />
                </div>

                <div class="form-group">
                    <label for="AccType">Accommodation Type</label>
                    <input type="text" class="form-control" id="AccType" name="AccType" />
                </div>

                <div class="form-group">
                    <label for="AccAddress">Accommodation Address</label>
                    <input type="text" class="form-control" id="AccAddress" name="AccAddress" />
                </div>
            </div>

            <div class="form-group toggle-group">
                <input type="checkbox" id="toggleSSDetails" />
                <label for="toggleSSDetails">Include SS Names</label>
            </div>

            <div id="ssDetails" class="details-group" style="display:none;">
                <div class="form-group">
                    <label for="SSNames">SS Names</label>
                    <input type="text" class="form-control" id="SSNames" name="SSNames" />
                </div>
            </div>

            <input type="hidden" id="SupplierID" name="SupplierID" value="@Model" />

            <button type="submit" class="btn btn-primary">Update</button>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var supplierId = @Model;
            var totalCountError = document.getElementById('TotalCountError');
            var packagePriceError = document.getElementById('PackagePriceError');

            document.getElementById('searchForm').addEventListener('submit', function (event) {
                event.preventDefault();

                const packageId = document.getElementById('packageId').value;
                if (!packageId) {
                    alert('Please enter a package ID.');
                    return;
                }

                fetch(`https://localhost:7252/Phase4/getpackage/${packageId}/${supplierId}`)
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        } else if (response.status === 404) {
                            throw new Error('No package found with this ID.');
                        } else {
                            throw new Error('Error fetching package details.');
                        }
                    })
                    .then(data => {
                        if (data) {
                            const editForm = document.getElementById('editForm');
                            editForm.style.display = 'block';

                            document.getElementById('TotalCount').value = data.totalCount || '';
                            document.getElementById('PackagePrice').value = data.packagePrice || '';
                            document.getElementById('Dated').value = data.dated ? new Date(data.dated).toISOString().split('T')[0] : '';
                            document.getElementById('Luxuary').value = data.luxuary ? 'true' : 'false';
                            document.getElementById('FlightName').value = data.flightName || '';
                            document.getElementById('From').value = data.from || '';
                            document.getElementById('To').value = data.to || '';
                            document.getElementById('FlightType').value = data.flightType || '';
                            document.getElementById('AccName').value = data.accName || '';
                            document.getElementById('AccType').value = data.accType || '';
                            document.getElementById('AccAddress').value = data.accAddress || '';
                            document.getElementById('SSNames').value = data.ssNames || '';
                            document.getElementById('SupplierID').value = data.supplierID || '';

                            // Toggle visibility based on data presence
                            document.getElementById('toggleFlightDetails').checked = !!data.flightName;
                            document.getElementById('toggleAccDetails').checked = !!data.accName;
                            document.getElementById('toggleSSDetails').checked = !!data.ssNames;
                            document.getElementById('flightDetails').style.display = data.flightName ? 'block' : 'none';
                            document.getElementById('accDetails').style.display = data.accName ? 'block' : 'none';
                            document.getElementById('ssDetails').style.display = data.ssNames ? 'block' : 'none';
                        } else {
                            alert('No package found with this ID.');
                            document.getElementById('editForm').style.display = 'none';
                        }
                    })
                    .catch(error => {
                        alert(error.message);
                        document.getElementById('editForm').style.display = 'none';
                    });
            });

            document.getElementById('editForm').addEventListener('submit', function (event) {
                event.preventDefault();

                var form = event.target;
                var formData = new FormData(form);

                var totalCount = parseInt(formData.get("TotalCount")) || 0;
                var packagePrice = parseFloat(formData.get("PackagePrice")) || 0;

                // Clear previous errors
                totalCountError.textContent = "";
                packagePriceError.textContent = "";

                // Validate fields
                var valid = true;
                if (totalCount <= 0) {
                    totalCountError.textContent = "Total Count must be a positive number.";
                    valid = false;
                }
                if (packagePrice <= 0) {
                    packagePriceError.textContent = "Package Price must be a positive number.";
                    valid = false;
                }

                if (!valid) {
                    return;
                }

                var package = {
                    TotalCount: formData.get("TotalCount"),
                    PackagePrice: formData.get("PackagePrice"),
                    Dated: formData.get("Dated"),
                    FlightName: formData.get("FlightName") || "",
                    From: formData.get("From") || "",
                    To: formData.get("To") || "",
                    FlightType: formData.get("FlightType") || "",
                    AccName: formData.get("AccName") || "",
                    AccType: formData.get("AccType") || "",
                    AccAddress: formData.get("AccAddress") || "",
                    SSNames: formData.get("SSNames") || "",
                    Luxuary: formData.get("Luxuary") === "true",
                    SupplierID: formData.get("SupplierID"),
                    PackageID: document.getElementById('packageId').value // Ensure PackageID is passed for update
                };

                fetch("https://localhost:7252/Phase4/editPackage", {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(package)
                })
                    .then(response => {
                        if (response.ok) {
                            alert("Package updated successfully.");
                            document.getElementById('editForm').style.display = 'none'; // Hide form after submission
                        } else {
                            alert("Error updating package.");
                        }
                    })
                    .catch(error => {
                        alert("An error occurred: " + error.message);
                    });
            });

            document.getElementById('toggleFlightDetails').addEventListener('change', function () {
                var flightDetailsDiv = document.getElementById('flightDetails');
                flightDetailsDiv.style.display = this.checked ? 'block' : 'none';
            });

            document.getElementById('toggleAccDetails').addEventListener('change', function () {
                var accDetailsDiv = document.getElementById('accDetails');
                accDetailsDiv.style.display = this.checked ? 'block' : 'none';
            });

            document.getElementById('toggleSSDetails').addEventListener('change', function () {
                var ssDetailsDiv = document.getElementById('ssDetails');
                ssDetailsDiv.style.display = this.checked ? 'block' : 'none';
            });

            // Luxury toggle logic
            const luxuryToggleButton = document.getElementById('luxuryToggle');
            const luxuryField = document.getElementById('Luxuary');
            const flightTypeField = document.getElementById('FlightType');
            const accTypeField = document.getElementById('AccType');
            const packagePriceField = document.getElementById('PackagePrice');

            luxuryToggleButton.addEventListener('click', function () {
                const isLuxuryEnabled = luxuryField.value === 'true';

                if (!isLuxuryEnabled) {
                    flightTypeField.value = 'Premium';
                    accTypeField.value = 'Premium';
                    packagePriceField.value = (parseFloat(packagePriceField.value) * 1.5).toFixed(2);
                    luxuryToggleButton.textContent = 'Disable Luxury';
                    luxuryField.value = 'true';
                } else {
                    flightTypeField.value = '';
                    accTypeField.value = '';
                    packagePriceField.value = (parseFloat(packagePriceField.value) / 1.5).toFixed(2);
                    luxuryToggleButton.textContent = 'Enable Luxury';
                    luxuryField.value = 'false';
                }
            });
        });
    </script>
</body>
</html>
